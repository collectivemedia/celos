apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

mainClassName = 'com.collective.celos.ci.CelosCi'
sourceCompatibility = 1.7
version = '0.1'

repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
    maven { url "http://repo1.maven.org/maven2" }
    maven { url "https://repository.cloudera.com/artifactory/cloudera-repos" }
}

dependencies {

    compile project(':celos-jetty')

    compile("org.apache.hadoop:hadoop-common:2.3.0-cdh5.1.2")
    compile("org.apache.hadoop:hadoop-hdfs:2.3.0-cdh5.1.2")
    compile("com.google.code.gson:gson:2.2.4")

    compile("javax.servlet:javax.servlet-api:3.1.0")
    compile("org.eclipse.jetty.aggregate:jetty-all:9.2.2.v20140723")
    compile("com.fasterxml.jackson.core:jackson-core:2.3.0")
    compile("com.fasterxml.jackson.core:jackson-databind:2.3.0")
    compile("com.fasterxml.jackson.core:jackson-annotations:2.3.0")
    compile("joda-time:joda-time:2.3")

    compile("commons-cli:commons-cli:1.2")
    compile("org.apache.commons:commons-vfs2:2.0")
    compile("log4j:log4j:1.2.17")
    compile("log4j:apache-log4j-extras:1.2.17")
    compile("com.jcraft:jsch:0.1.51")

    testCompile("org.mockito:mockito-all:1.9.5")
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

jar {
    // If you let all the META-INF/ stuff from the dependency jars in it clobbers our own manifest, among other things
    // and generally makes things not work
    from {
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude 'META-INF/MANIFEST.MF'
            }
        }
    }
    manifest {
        attributes("Main-Class": mainClassName)
    }
}

def repoUser = 'dummy';
if (hasProperty('nexusUser')) {
    repoUser = nexusUser
}
def repoPw = 'dummy';
if (hasProperty('nexusPassword')) {
    repoPw = nexusPassword
}

uploadArchives.doFirst {
    repositories {
        mavenDeployer {
            repository(url: "http://nexus.collective-media.net/content/repositories/releases") {
                authentication(userName: repoUser, password: repoPw)
            }
            if (!System.getenv("BUILD_NUMBER")) throw new GradleException("BUILD_NUMBER env variable should be present")
            pom.version = System.getenv("BUILD_NUMBER")
            pom.groupId = "com.collective"
        }
    }
}
