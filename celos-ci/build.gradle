apply plugin: 'maven'

mainClassName = 'com.collective.celos.ci.CelosCi'
version = '0.1'

configurations {
    compileIncluded
    compile.extendsFrom compileIncluded
}

dependencies {
    compileIncluded project(':celos-server')
    compile("com.jcraft:jsch:0.1.51")

    compile("org.apache.commons:commons-vfs2:2.0")
    compile("com.google.code.gson:gson:2.2.4")
    compile("org.apache.hive:hive-jdbc:1.1.0-cdh5.9.0")
//  this leads fatJar to auth fail, i am not sure why did i put it here, so disabling it   
//  compile("org.apache.hadoop:hadoop-mapreduce-client-core:2.5.0-cdh5.3.1")
    compile("net.sf.opencsv:opencsv:2.3")

    testCompile("junit:junit:4.8.2")
    testCompile("org.powermock:powermock-module-junit4:1.5.5") {
       exclude module: 'junit'
    }
    testCompile("org.powermock:powermock-api-mockito:1.5.5") {
       exclude module: 'junit'
    }
    testCompile("org.mockito:mockito-all:1.9.5")
}

jar {
    from(sourceSets.main.output) {
        include "**/**"
    }
    archiveName "celos-ci.jar"
    baseName "celos-ci"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }}
    exclude('META-INF/license/**')
    manifest {
        attributes("Main-Class": mainClassName)
    }
    zip64 = true
}

def repoUser = System.getenv("CELOS_NEXUS_USER");
def repoPw = System.getenv("CELOS_NEXUS_PASS");

uploadArchives.doFirst {
    repositories {
        mavenDeployer {
            repository(url: System.getenv("NEXUS_MAVEN_REPO")) {
                authentication(userName: repoUser, password: repoPw)
            }
            if (!System.getenv("CELOS_BUILD_NUMBER")) throw new GradleException("CELOS_BUILD_NUMBER env variable should be present")
            pom.version = "2.0." + System.getenv("CELOS_BUILD_NUMBER")
            pom.groupId = "com.collective"
            pom.dependencies.removeAll { it.scope == "compileIncluded" }
        }
    }
}
