#!/usr/bin/env bash

# This wrapper program is called by Celos to execute the command $CMD
# with the given empty job directory $DIR.
# 
# It must return quickly, so we define an inner_wrapper function and
# fork it.  The outer wrapper (this program) then returns back to
# Celos.
#
# The inner wrapper forks the $CMD and writes its pid to the job
# directory at $DIR/pid.  (If it didn't fork the $CMD, we couldn't get
# the PID.)
# 
# The inner wrapper then waits for $CMD, and finally writes its exit
# code to $DIR/status.
#
# Additionally, the inner wrapper redirects $CMD's stdout and stderr
# to $DIR/out and $DIR/err, respectively, and writes the executed
# command line to $DIR/cmd for debugging purposes.

CMD=$1
DIR=$2

inner_wrapper() {
    echo $CMD > $DIR/cmd 
    $CMD >$DIR/out 2>$DIR/err </dev/null &
    echo $! >$DIR/pid 
    wait $! 
    echo $? >$DIR/status
}

inner_wrapper &
