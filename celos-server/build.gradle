apply plugin: 'maven'

mainClassName = 'com.collective.celos.server.Main'
version = '0.1'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/webapp'
        }
    }
}


configurations {
    compileIncluded
    compile.extendsFrom compileIncluded
}

dependencies {
    compileIncluded project(':celos-common')

    compile("com.googlecode.json-simple:json-simple:1.1.1")
    compile("com.jcraft:jsch:0.1.51")
    compile("commons-io:commons-io:2.4")
    compile("commons-logging:commons-logging:1.1.3")
    compile("org.apache.commons:commons-vfs2:2.0")

    compile("org.apache.hadoop:hadoop-auth:2.5.0-cdh5.3.1")
    compile("org.apache.hadoop:hadoop-common:2.5.0-cdh5.3.1") { exclude group: 'javax.servlet', module: 'servlet-api' }
    compile("org.apache.hadoop:hadoop-hdfs:2.5.0-cdh5.3.1") { exclude group: 'javax.servlet', module: 'servlet-api' }
    compile("org.apache.oozie:oozie-client:4.0.0-cdh5.3.1")
    compile("org.quartz-scheduler:quartz:2.1.1")

    testCompile('com.h2database:h2:1.4.190')
    testCompile("junit:junit:4.8.2")
    testCompile("org.powermock:powermock-module-junit4:1.5.5") {
       exclude module: 'junit'
    }
    testCompile("org.powermock:powermock-api-mockito:1.5.5") {
       exclude module: 'junit'
    }
    testCompile("org.mockito:mockito-all:1.9.5")
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }}
    baseName "celos-server"
    archiveName "celos-server.jar"
    manifest {
        attributes("Main-Class": mainClassName)
    }
}

def repoUser = System.getenv("CELOS_NEXUS_USER");
def repoPw = System.getenv("CELOS_NEXUS_PASS");

uploadArchives.doFirst {
    repositories {
        mavenDeployer {
            repository(url: System.getenv("NEXUS_MAVEN_REPO")) {
                authentication(userName: repoUser, password: repoPw)
            }
            if (!System.getenv("CELOS_BUILD_NUMBER")) throw new GradleException("CELOS_BUILD_NUMBER env variable should be present")
            pom.version = "2.0." + System.getenv("CELOS_BUILD_NUMBER")
            pom.groupId = "com.collective"
            pom.dependencies.removeAll { it.scope == "compileIncluded" }
        }
    }
}
